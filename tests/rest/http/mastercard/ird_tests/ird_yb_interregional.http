###
# @name=test_IRD_YB_interregional_authorization

< ../date.js

POST {{host}}/v1/authorizations/
Content-Type: application/json
nonce: gw-{{$random.uuid}}
Authorization: Basic {{authorization_perm}}

{
     "amount": 100,
     "currency": "EUR",
     "reference": "{{$random.uuid}}",
     "source": "ecommerce",
     "localTransactionDateTime": "{{currentDateTime}}",
     "card": {
        "holder": "{{$random.alphabetic(10)}}",
        "number": "5204490010002034",
        "cvv": "203",
        "expiry": {
            "year": "24",
            "month": "02"
        }
    },
    "cardAcceptor": {
        "id": "RIMIMINI",
        "categoryCode": "5411",
        "name": "Rimi Mini",
        "city": "Riga",
        "country": "LVA",
        "postalCode": "LV-1009"
    },
    "exemption": "lowValue"
}

> {%
    client.test("test_IRD_YB_interregional_authorization should return 200 OK", function () {
        client.assert(response.status === 200, "status is not 200")
    })

    client.test("test_IRD_YB_interregional_authorization cardschemeresponse code should be 00", function (){
        client.assert(response.body.cardSchemeResponse.code == "00")
    })

    if (response.status === 200) {
        client.global.clear("authorization_id")
        client.global.set("authorization_id", response.body.id)
        client.global.set("reference", response.body.reference)
    }
%}

###
# @name=test_IRD_YB_interregional_capture
POST {{host}}/v1/authorizations/{{authorization_id}}/captures/
Content-Type: application/json
nonce: gw-{{$random.uuid}}
Authorization: Basic {{authorization_perm}}

{
  "amount": 100,
  "isFinal": true,
  "currency": "EUR",
  "reference": "{{reference}}"
}


> {%
    client.test("test_IRD_YB_interregional_capture should return 201 OK", function () {
        client.assert(response.status === 201, "status is not 201")
    })
%}