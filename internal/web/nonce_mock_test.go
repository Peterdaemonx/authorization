// Code generated by MockGen. DO NOT EDIT.
// Source: ./nonce.go

// Package web_test is a generated GoMock package.
package web_test

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockNonceStore is a mock of NonceStore interface.
type MockNonceStore struct {
	ctrl     *gomock.Controller
	recorder *MockNonceStoreMockRecorder
}

// MockNonceStoreMockRecorder is the mock recorder for MockNonceStore.
type MockNonceStoreMockRecorder struct {
	mock *MockNonceStore
}

// NewMockNonceStore creates a new mock instance.
func NewMockNonceStore(ctrl *gomock.Controller) *MockNonceStore {
	mock := &MockNonceStore{ctrl: ctrl}
	mock.recorder = &MockNonceStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNonceStore) EXPECT() *MockNonceStoreMockRecorder {
	return m.recorder
}

// StoreNonce mocks base method.
func (m *MockNonceStore) StoreNonce(ctx context.Context, pspID uuid.UUID, nonce string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StoreNonce", ctx, pspID, nonce)
	ret0, _ := ret[0].(error)
	return ret0
}

// StoreNonce indicates an expected call of StoreNonce.
func (mr *MockNonceStoreMockRecorder) StoreNonce(ctx, pspID, nonce interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StoreNonce", reflect.TypeOf((*MockNonceStore)(nil).StoreNonce), ctx, pspID, nonce)
}
